{
    "PoolInstance": {
        "entities": {
            "lastInitializedRevision": {
                "dataType": "uint256",
                "dataMeta": {
                    "size": 32
                },
                "storageInfo": {
                    "slot": 0,
                    "offset": 0
                },
                "read": true
            },
            "initializing": {
                "dataType": "bool",
                "dataMeta": {
                    "size": 1
                },
                "storageInfo": {
                    "slot": 1,
                    "offset": 0
                },
                "read": true
            },
            "______gap": {
                "dataType": "staticArray",
                "dataMeta": {
                    "length": 50,
                    "elementType": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 32
                        }
                    }
                },
                "storageInfo": {
                    "slot": 2,
                    "offset": 0
                }
            },
            "_reserves": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "ReserveData",
                            "fields": [
                                {
                                    "name": "configuration",
                                    "type": {
                                        "dataType": "struct",
                                        "dataMeta": {
                                            "name": "ReserveConfigurationMap",
                                            "fields": [
                                                {
                                                    "name": "data",
                                                    "type": {
                                                        "dataType": "uint256",
                                                        "dataMeta": {
                                                            "size": 32
                                                        },
                                                        "bitmap": {
                                                            "dataType": "struct",
                                                            "dataMeta": {
                                                                "fields": [
                                                                    {
                                                                        "name": "ltv",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    15,
                                                                                    0
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "supplyCap",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    151,
                                                                                    116
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "siloedBorrowing",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    62,
                                                                                    62
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowCap",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    115,
                                                                                    80
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowing",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    58,
                                                                                    58
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "flashloanEnabled",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    63,
                                                                                    63
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationThreshold",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    31,
                                                                                    16
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "reserveFactor",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    79,
                                                                                    64
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationBonus",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    47,
                                                                                    32
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationThreshold",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    31,
                                                                                    16
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationProtocolFee",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    167,
                                                                                    152
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "paused",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    60,
                                                                                    60
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "paused",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    60,
                                                                                    60
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationBonus",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    47,
                                                                                    32
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "ltv",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    15,
                                                                                    0
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "active",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    56,
                                                                                    56
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "reserveFactor",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    79,
                                                                                    64
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "active",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    56,
                                                                                    56
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "debtCeiling",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    251,
                                                                                    212
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "decimals",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    55,
                                                                                    48
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "frozen",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    57,
                                                                                    57
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "decimals",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    55,
                                                                                    48
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowableInIsolation",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    61,
                                                                                    61
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "read": true
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "liquidityIndex",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "currentLiquidityRate",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "variableBorrowIndex",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "currentVariableBorrowRate",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "deficit",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "lastUpdateTimestamp",
                                    "type": {
                                        "dataType": "uint40",
                                        "dataMeta": {
                                            "size": 5
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "id",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationGracePeriodUntil",
                                    "type": {
                                        "dataType": "uint40",
                                        "dataMeta": {
                                            "size": 5
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "aTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedStableDebtTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "variableDebtTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedInterestRateStrategyAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "accruedToTreasury",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "virtualUnderlyingBalance",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "isolationModeTotalDebt",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedVirtualUnderlyingBalance",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 52,
                    "offset": 0
                }
            },
            "_usersConfig": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "UserConfigurationMap",
                            "fields": [
                                {
                                    "name": "data",
                                    "type": {
                                        "dataType": "uint256",
                                        "dataMeta": {
                                            "size": 32
                                        },
                                        "bitmap": {
                                            "dataType": "staticArray",
                                            "dataMeta": {
                                                "length": 128,
                                                "elementType": {
                                                    "dataType": "struct",
                                                    "dataMeta": {
                                                        "fields": [
                                                            {
                                                                "name": "Borrowing",
                                                                "type": {
                                                                    "dataType": "bool",
                                                                    "dataMeta": {
                                                                        "size": 1,
                                                                        "offset": 0
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "UsingAsCollateral",
                                                                "type": {
                                                                    "dataType": "bool",
                                                                    "dataMeta": {
                                                                        "size": 1,
                                                                        "offset": 1
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 53,
                    "offset": 0
                }
            },
            "_reservesList": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 32
                        }
                    },
                    "value": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        },
                        "read": true
                    }
                },
                "storageInfo": {
                    "slot": 54,
                    "offset": 0
                }
            },
            "_eModeCategories": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "uint8",
                        "dataMeta": {
                            "size": 1
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "EModeCategory",
                            "fields": [
                                {
                                    "name": "ltv",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationThreshold",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationBonus",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "collateralBitmap",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "label",
                                    "type": {
                                        "dataType": "string",
                                        "dataMeta": {
                                            "size": 32
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "borrowableBitmap",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 55,
                    "offset": 0
                }
            },
            "_usersEModeCategory": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "uint8",
                        "dataMeta": {
                            "size": 1
                        },
                        "read": true
                    }
                },
                "storageInfo": {
                    "slot": 56,
                    "offset": 0
                }
            },
            "__DEPRECATED_bridgeProtocolFee": {
                "dataType": "uint256",
                "dataMeta": {
                    "size": 32
                },
                "storageInfo": {
                    "slot": 57,
                    "offset": 0
                }
            },
            "_flashLoanPremium": {
                "dataType": "uint128",
                "dataMeta": {
                    "size": 16
                },
                "storageInfo": {
                    "slot": 58,
                    "offset": 0
                },
                "read": true
            },
            "__DEPRECATED_flashLoanPremiumToProtocol": {
                "dataType": "uint128",
                "dataMeta": {
                    "size": 16
                },
                "storageInfo": {
                    "slot": 58,
                    "offset": 16
                }
            },
            "__DEPRECATED_maxStableRateBorrowSizePercent": {
                "dataType": "uint64",
                "dataMeta": {
                    "size": 8
                },
                "storageInfo": {
                    "slot": 59,
                    "offset": 0
                }
            },
            "_reservesCount": {
                "dataType": "uint16",
                "dataMeta": {
                    "size": 2
                },
                "storageInfo": {
                    "slot": 59,
                    "offset": 8
                },
                "read": true
            },
            "_positionManager": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "mapping",
                        "dataMeta": {
                            "key": {
                                "dataType": "address",
                                "dataMeta": {
                                    "size": 20
                                }
                            },
                            "value": {
                                "dataType": "bool",
                                "dataMeta": {
                                    "size": 1
                                },
                                "read": true
                            }
                        }
                    }
                },
                "storageInfo": {
                    "slot": 60,
                    "offset": 0
                }
            }
        },
        "address": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "logic_address": "0x97287a4f35e583d924f78ad88db8afce1379189a",
        "constants": {
            "Pool": [
                {
                    "name": "RESERVE_INTEREST_RATE_STRATEGY",
                    "value": null,
                    "type": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 160,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "ADDRESSES_PROVIDER",
                    "value": null,
                    "type": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 160,
                            "interface": "IPoolAddressesProvider"
                        }
                    }
                }
            ],
            "WadRayMath": [
                {
                    "name": "RAY",
                    "value": 1000000000000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "HALF_RAY",
                    "value": 500000000000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "WAD",
                    "value": 1000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "MathUtils": [
                {
                    "name": "SECONDS_PER_YEAR",
                    "value": 31536000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "PercentageMath": [
                {
                    "name": "HALF_PERCENTAGE_FACTOR",
                    "value": 5000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "PERCENTAGE_FACTOR",
                    "value": 10000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "ValidationLogic": [
                {
                    "name": "HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
                    "value": 1000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "MINIMUM_HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
                    "value": 950000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "LiquidationLogic": [
                {
                    "name": "MIN_BASE_MAX_CLOSE_FACTOR_THRESHOLD",
                    "value": 200000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "CLOSE_FACTOR_HF_THRESHOLD",
                    "value": 950000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "DEFAULT_LIQUIDATION_CLOSE_FACTOR",
                    "value": 5000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "MIN_LEFTOVER_BASE",
                    "value": null,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "PoolInstance": [
                {
                    "name": "POOL_REVISION",
                    "value": 9,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ]
        },
        "utilities": [
            {
                "function": "getReserveData",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].variableBorrowIndex",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].accruedToTreasury",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].liquidityIndex",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].currentVariableBorrowRate",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].aTokenAddress",
                        "type": "address"
                    },
                    {
                        "value": "_reserves[asset].lastUpdateTimestamp",
                        "type": "uint40"
                    },
                    {
                        "value": "_reserves[asset].id",
                        "type": "uint16"
                    },
                    {
                        "value": "_reserves[asset].variableDebtTokenAddress",
                        "type": "address"
                    },
                    {
                        "value": "_reserves[asset].currentLiquidityRate",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].configuration",
                        "type": "struct"
                    },
                    {
                        "value": "_reserves[asset].isolationModeTotalDebt",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getVirtualUnderlyingBalance",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].virtualUnderlyingBalance",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getUserAccountData",
                "parameters": {
                    "user": "address"
                },
                "returns": []
            },
            {
                "function": "getConfiguration",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].configuration",
                        "type": "struct"
                    }
                ]
            },
            {
                "function": "getUserConfiguration",
                "parameters": {
                    "user": "address"
                },
                "returns": [
                    {
                        "value": "_usersConfig[user]",
                        "type": "struct"
                    }
                ]
            },
            {
                "function": "getReserveNormalizedIncome",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].liquidityIndex",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReserveNormalizedVariableDebt",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].variableBorrowIndex",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReservesList",
                "parameters": {},
                "returns": [
                    {
                        "value": "_reservesList[0]",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getReservesCount",
                "parameters": {},
                "returns": [
                    {
                        "value": "_reservesCount",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getReserveAddressById",
                "parameters": {
                    "id": "uint16"
                },
                "returns": [
                    {
                        "value": "_reservesList[id]",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "FLASHLOAN_PREMIUM_TOTAL",
                "parameters": {},
                "returns": [
                    {
                        "value": "_flashLoanPremium",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
                "parameters": {},
                "returns": []
            },
            {
                "function": "MAX_NUMBER_RESERVES",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getEModeCategoryData",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].ltv",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationBonus",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].label",
                        "type": "string"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationThreshold",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getEModeCategoryCollateralConfig",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].ltv",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationBonus",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationThreshold",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getEModeCategoryLabel",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].label",
                        "type": "string"
                    }
                ]
            },
            {
                "function": "getEModeCategoryCollateralBitmap",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].collateralBitmap",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getEModeCategoryBorrowableBitmap",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].borrowableBitmap",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getUserEMode",
                "parameters": {
                    "user": "address"
                },
                "returns": [
                    {
                        "value": "_usersEModeCategory[user]",
                        "type": "uint8"
                    }
                ]
            },
            {
                "function": "getLiquidationGracePeriod",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].liquidationGracePeriodUntil",
                        "type": "uint40"
                    }
                ]
            },
            {
                "function": "isApprovedPositionManager",
                "parameters": {
                    "user": "address",
                    "positionManager": "address"
                },
                "returns": [
                    {
                        "value": "_positionManager[user][positionManager]",
                        "type": "bool"
                    }
                ]
            },
            {
                "function": "getReserveDeficit",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].deficit",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReserveAToken",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].aTokenAddress",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getReserveVariableDebtToken",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].variableDebtTokenAddress",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getFlashLoanLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getBorrowLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getEModeLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getLiquidationLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getPoolLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getSupplyLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "ADDRESSES_PROVIDER",
                "parameters": {},
                "returns": [
                    {
                        "value": "ADDRESSES_PROVIDER",
                        "type": "IPoolAddressesProvider"
                    }
                ]
            },
            {
                "function": "RESERVE_INTEREST_RATE_STRATEGY",
                "parameters": {},
                "returns": [
                    {
                        "value": "RESERVE_INTEREST_RATE_STRATEGY",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getRevision",
                "parameters": {},
                "returns": [
                    {
                        "value": "getRevision",
                        "type": "uint256"
                    },
                    {
                        "value": 9,
                        "type": "uint256"
                    }
                ]
            }
        ],
        "function_write_storage": {
            "supply(address,uint256,address,uint16)": {
                "parameters": [
                    "asset",
                    "amount",
                    "onBehalfOf",
                    "referralCode"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
                "parameters": [
                    "asset",
                    "amount",
                    "onBehalfOf",
                    "referralCode",
                    "deadline",
                    "permitV",
                    "permitR",
                    "permitS"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "withdraw(address,uint256,address)": {
                "parameters": [
                    "asset",
                    "amount",
                    "to"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[$msg_sender].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "borrow(address,uint256,uint256,uint16,address)": {
                "parameters": [
                    "asset",
                    "amount",
                    "interestRateMode",
                    "referralCode",
                    "onBehalfOf"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[_reservesList[((0)+(1))+(1)]].isolationModeTotalDebt",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                    "_reserves[asset].currentLiquidityRate",
                    "_reserves[0].isolationModeTotalDebt"
                ]
            },
            "repay(address,uint256,uint256,address)": {
                "parameters": [
                    "asset",
                    "amount",
                    "interestRateMode",
                    "onBehalfOf"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[_reservesList[0]].isolationModeTotalDebt",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                    "_reserves[asset].currentLiquidityRate",
                    "_reserves[0].isolationModeTotalDebt"
                ]
            },
            "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
                "parameters": [
                    "asset",
                    "amount",
                    "interestRateMode",
                    "onBehalfOf",
                    "deadline",
                    "permitV",
                    "permitR",
                    "permitS"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[_reservesList[0]].isolationModeTotalDebt",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                    "_reserves[asset].currentLiquidityRate",
                    "_reserves[0].isolationModeTotalDebt"
                ]
            },
            "repayWithATokens(address,uint256,uint256)": {
                "parameters": [
                    "asset",
                    "amount",
                    "interestRateMode"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_reserves[_reservesList[0]].isolationModeTotalDebt",
                    "_usersConfig[$msg_sender].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                    "_reserves[asset].currentLiquidityRate",
                    "_reserves[0].isolationModeTotalDebt"
                ]
            },
            "setUserUseReserveAsCollateral(address,bool)": {
                "parameters": [
                    "asset",
                    "useAsCollateral"
                ],
                "write_storages": [
                    "_usersConfig[$msg_sender].data"
                ]
            },
            "liquidationCall(address,address,address,uint256,bool)": {
                "parameters": [
                    "collateralAsset",
                    "debtAsset",
                    "borrower",
                    "debtToCover",
                    "receiveAToken"
                ],
                "write_storages": [
                    "_reserves[debtAsset].aTokenAddress",
                    "_reserves[_reservesList[0]].currentVariableBorrowRate",
                    "_usersConfig[$msg_sender].data",
                    "_reserves[debtAsset].liquidityIndex",
                    "_reserves[debtAsset].currentLiquidityRate",
                    "_reserves[collateralAsset].configuration",
                    "_reserves[debtAsset].configuration",
                    "_reserves[collateralAsset].isolationModeTotalDebt",
                    "_reserves[collateralAsset].deficit",
                    "_reserves[collateralAsset].variableDebtTokenAddress",
                    "_usersConfig[borrower].data",
                    "_reserves[_reservesList[0]].liquidityIndex",
                    "_reserves[debtAsset].variableDebtTokenAddress",
                    "_reserves[_reservesList[0]].deficit",
                    "_reserves[debtAsset].id",
                    "_reserves[debtAsset].variableBorrowIndex",
                    "_reserves[debtAsset].lastUpdateTimestamp",
                    "_reserves[collateralAsset].currentVariableBorrowRate",
                    "_reserves[_reservesList[0]].accruedToTreasury",
                    "_reserves[collateralAsset].lastUpdateTimestamp",
                    "_reserves[collateralAsset].currentLiquidityRate",
                    "_reserves[debtAsset].currentVariableBorrowRate",
                    "_reserves[collateralAsset].aTokenAddress",
                    "_reserves[collateralAsset].variableBorrowIndex",
                    "_reserves[_reservesList[0]].variableBorrowIndex",
                    "_reserves[_reservesList[0]].virtualUnderlyingBalance",
                    "_reserves[_reservesList[0]].currentLiquidityRate",
                    "_reserves[debtAsset].virtualUnderlyingBalance",
                    "_reserves[collateralAsset].liquidityIndex",
                    "_reserves[collateralAsset].virtualUnderlyingBalance",
                    "_reserves[_reservesList[0]].lastUpdateTimestamp",
                    "_reserves[debtAsset].deficit"
                ]
            },
            "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
                "parameters": [
                    "receiverAddress",
                    "assets",
                    "amounts",
                    "interestRateModes",
                    "onBehalfOf",
                    "params",
                    "referralCode"
                ],
                "write_storages": [
                    "_reserves[_reservesList[((0)+(1))+(1)]].isolationModeTotalDebt",
                    "_reserves[assets[0]].lastUpdateTimestamp",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[assets[0]].variableBorrowIndex",
                    "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                    "_reserves[assets[0]].virtualUnderlyingBalance",
                    "_reserves[assets[0]].currentLiquidityRate",
                    "_reserves[assets[0]].accruedToTreasury",
                    "_reserves[assets[0]].liquidityIndex",
                    "_reserves[assets[0]].currentVariableBorrowRate",
                    "_reserves[0].isolationModeTotalDebt"
                ]
            },
            "flashLoanSimple(address,address,uint256,bytes,uint16)": {
                "parameters": [
                    "receiverAddress",
                    "asset",
                    "amount",
                    "params",
                    "referralCode"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "mintToTreasury(address[])": {
                "parameters": [
                    "assets"
                ],
                "write_storages": [
                    "_reserves[assets[0]].accruedToTreasury"
                ]
            },
            "getReserveData(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getVirtualUnderlyingBalance(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getUserAccountData(address)": {
                "parameters": [
                    "user"
                ],
                "write_storages": []
            },
            "getConfiguration(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getUserConfiguration(address)": {
                "parameters": [
                    "user"
                ],
                "write_storages": []
            },
            "getReserveNormalizedIncome(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getReserveNormalizedVariableDebt(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getReservesList()": {
                "parameters": [],
                "write_storages": []
            },
            "getReservesCount()": {
                "parameters": [],
                "write_storages": []
            },
            "getReserveAddressById(uint16)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "FLASHLOAN_PREMIUM_TOTAL()": {
                "parameters": [],
                "write_storages": []
            },
            "FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
                "parameters": [],
                "write_storages": []
            },
            "MAX_NUMBER_RESERVES()": {
                "parameters": [],
                "write_storages": []
            },
            "finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
                "parameters": [
                    "asset",
                    "from",
                    "to",
                    "scaledAmount",
                    "scaledBalanceFromBefore",
                    "scaledBalanceToBefore"
                ],
                "write_storages": []
            },
            "initReserve(address,address,address)": {
                "parameters": [
                    "asset",
                    "aTokenAddress",
                    "variableDebtAddress"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reservesList[_reservesCount]",
                    "_reservesCount",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].aTokenAddress",
                    "_reserves[asset].id",
                    "_reservesList[0]",
                    "_reserves[asset].variableDebtTokenAddress"
                ]
            },
            "dropReserve(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": [
                    "_reserves[asset]",
                    "_reservesList[_reserves[asset].id]"
                ]
            },
            "syncIndexesState(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex"
                ]
            },
            "syncRatesState(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": [
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].currentLiquidityRate",
                    "_reserves[asset].currentVariableBorrowRate"
                ]
            },
            "setConfiguration(address,(uint256))": {
                "parameters": [
                    "asset",
                    "configuration"
                ],
                "write_storages": []
            },
            "updateFlashloanPremium(uint128)": {
                "parameters": [
                    "flashLoanPremium"
                ],
                "write_storages": [
                    "_flashLoanPremium"
                ]
            },
            "configureEModeCategory(uint8,(uint16,uint16,uint16,string))": {
                "parameters": [
                    "id",
                    "category"
                ],
                "write_storages": []
            },
            "configureEModeCategoryCollateralBitmap(uint8,uint128)": {
                "parameters": [
                    "id",
                    "collateralBitmap"
                ],
                "write_storages": []
            },
            "configureEModeCategoryBorrowableBitmap(uint8,uint128)": {
                "parameters": [
                    "id",
                    "borrowableBitmap"
                ],
                "write_storages": []
            },
            "getEModeCategoryData(uint8)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "getEModeCategoryCollateralConfig(uint8)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "getEModeCategoryLabel(uint8)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "getEModeCategoryCollateralBitmap(uint8)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "getEModeCategoryBorrowableBitmap(uint8)": {
                "parameters": [
                    "id"
                ],
                "write_storages": []
            },
            "setUserEMode(uint8)": {
                "parameters": [
                    "categoryId"
                ],
                "write_storages": [
                    "_usersEModeCategory[$msg_sender]"
                ]
            },
            "getUserEMode(address)": {
                "parameters": [
                    "user"
                ],
                "write_storages": []
            },
            "resetIsolationModeTotalDebt(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": [
                    "_reserves[asset].isolationModeTotalDebt"
                ]
            },
            "getLiquidationGracePeriod(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "setLiquidationGracePeriod(address,uint40)": {
                "parameters": [
                    "asset",
                    "until"
                ],
                "write_storages": []
            },
            "rescueTokens(address,address,uint256)": {
                "parameters": [
                    "token",
                    "to",
                    "amount"
                ],
                "write_storages": []
            },
            "deposit(address,uint256,address,uint16)": {
                "parameters": [
                    "asset",
                    "amount",
                    "onBehalfOf",
                    "referralCode"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[onBehalfOf].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "eliminateReserveDeficit(address,uint256)": {
                "parameters": [
                    "asset",
                    "amount"
                ],
                "write_storages": [
                    "_reserves[asset].variableBorrowIndex",
                    "_reserves[asset].virtualUnderlyingBalance",
                    "_reserves[asset].accruedToTreasury",
                    "_reserves[asset].liquidityIndex",
                    "_reserves[asset].currentVariableBorrowRate",
                    "_usersConfig[$msg_sender].data",
                    "_reserves[asset].lastUpdateTimestamp",
                    "_reserves[asset].deficit",
                    "_reserves[asset].currentLiquidityRate"
                ]
            },
            "approvePositionManager(address,bool)": {
                "parameters": [
                    "positionManager",
                    "approve"
                ],
                "write_storages": [
                    "_positionManager[$msg_sender][positionManager]"
                ]
            },
            "renouncePositionManagerRole(address)": {
                "parameters": [
                    "user"
                ],
                "write_storages": [
                    "_positionManager[user][$msg_sender]"
                ]
            },
            "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address)": {
                "parameters": [
                    "asset",
                    "useAsCollateral",
                    "onBehalfOf"
                ],
                "write_storages": [
                    "_usersConfig[onBehalfOf].data"
                ]
            },
            "setUserEModeOnBehalfOf(uint8,address)": {
                "parameters": [
                    "categoryId",
                    "onBehalfOf"
                ],
                "write_storages": [
                    "_usersEModeCategory[onBehalfOf]"
                ]
            },
            "isApprovedPositionManager(address,address)": {
                "parameters": [
                    "user",
                    "positionManager"
                ],
                "write_storages": []
            },
            "getReserveDeficit(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getReserveAToken(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getReserveVariableDebtToken(address)": {
                "parameters": [
                    "asset"
                ],
                "write_storages": []
            },
            "getFlashLoanLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "getBorrowLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "getEModeLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "getLiquidationLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "getPoolLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "getSupplyLogic()": {
                "parameters": [],
                "write_storages": []
            },
            "multicall(bytes[])": {
                "parameters": [
                    "data"
                ],
                "write_storages": []
            },
            "ADDRESSES_PROVIDER()": {
                "parameters": [],
                "write_storages": []
            },
            "RESERVE_INTEREST_RATE_STRATEGY()": {
                "parameters": [],
                "write_storages": []
            },
            "getRevision()": {
                "parameters": [],
                "write_storages": []
            },
            "constructor(address,address)": {
                "parameters": [
                    "provider",
                    "interestRateStrategy_"
                ],
                "write_storages": []
            },
            "initialize(address)": {
                "parameters": [
                    "provider"
                ],
                "write_storages": [
                    "lastInitializedRevision",
                    "initializing"
                ]
            }
        }
    }
}