{
    "PoolInstance": {
        "entities": {
            "lastInitializedRevision": {
                "dataType": "uint256",
                "dataMeta": {
                    "size": 32
                },
                "storageInfo": {
                    "slot": 0,
                    "offset": 0
                },
                "read": true
            },
            "initializing": {
                "dataType": "bool",
                "dataMeta": {
                    "size": 1
                },
                "storageInfo": {
                    "slot": 1,
                    "offset": 0
                },
                "read": true
            },
            "______gap": {
                "dataType": "staticArray",
                "dataMeta": {
                    "length": 50,
                    "elementType": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 32
                        }
                    }
                },
                "storageInfo": {
                    "slot": 2,
                    "offset": 0
                }
            },
            "_reserves": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "ReserveData",
                            "fields": [
                                {
                                    "name": "configuration",
                                    "type": {
                                        "dataType": "struct",
                                        "dataMeta": {
                                            "name": "ReserveConfigurationMap",
                                            "fields": [
                                                {
                                                    "name": "data",
                                                    "type": {
                                                        "dataType": "uint256",
                                                        "dataMeta": {
                                                            "size": 32
                                                        },
                                                        "bitmap": {
                                                            "dataType": "struct",
                                                            "dataMeta": {
                                                                "fields": [
                                                                    {
                                                                        "name": "decimals",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    55,
                                                                                    48
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "decimals",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    55,
                                                                                    48
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "debtCeiling",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    251,
                                                                                    212
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowing",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    58,
                                                                                    58
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "reserveFactor",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    79,
                                                                                    64
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowCap",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    115,
                                                                                    80
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "active",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    56,
                                                                                    56
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "paused",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    60,
                                                                                    60
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "paused",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    60,
                                                                                    60
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "active",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    56,
                                                                                    56
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "frozen",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    57,
                                                                                    57
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "ltv",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    15,
                                                                                    0
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "borrowableInIsolation",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    61,
                                                                                    61
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "reserveFactor",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    79,
                                                                                    64
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "supplyCap",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    151,
                                                                                    116
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationBonus",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    47,
                                                                                    32
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "flashloanEnabled",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    63,
                                                                                    63
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "siloedBorrowing",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    62,
                                                                                    62
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationBonus",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    47,
                                                                                    32
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationThreshold",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    31,
                                                                                    16
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationThreshold",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    31,
                                                                                    16
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "liquidationProtocolFee",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    167,
                                                                                    152
                                                                                ]
                                                                            }
                                                                        }
                                                                    },
                                                                    {
                                                                        "name": "ltv",
                                                                        "type": {
                                                                            "dataType": "uint256",
                                                                            "dataMeta": {
                                                                                "size": 256,
                                                                                "offset": [
                                                                                    15,
                                                                                    0
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "read": true
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "name": "liquidityIndex",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "currentLiquidityRate",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "variableBorrowIndex",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "currentVariableBorrowRate",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "deficit",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "lastUpdateTimestamp",
                                    "type": {
                                        "dataType": "uint40",
                                        "dataMeta": {
                                            "size": 5
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "id",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationGracePeriodUntil",
                                    "type": {
                                        "dataType": "uint40",
                                        "dataMeta": {
                                            "size": 5
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "aTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedStableDebtTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "variableDebtTokenAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedInterestRateStrategyAddress",
                                    "type": {
                                        "dataType": "address",
                                        "dataMeta": {
                                            "size": 20
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "accruedToTreasury",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "virtualUnderlyingBalance",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "isolationModeTotalDebt",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "__deprecatedVirtualUnderlyingBalance",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 52,
                    "offset": 0
                }
            },
            "_usersConfig": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "UserConfigurationMap",
                            "fields": [
                                {
                                    "name": "data",
                                    "type": {
                                        "dataType": "uint256",
                                        "dataMeta": {
                                            "size": 32
                                        },
                                        "bitmap": {
                                            "dataType": "staticArray",
                                            "dataMeta": {
                                                "length": 128,
                                                "elementType": {
                                                    "dataType": "struct",
                                                    "dataMeta": {
                                                        "fields": [
                                                            {
                                                                "name": "UsingAsCollateral",
                                                                "type": {
                                                                    "dataType": "bool",
                                                                    "dataMeta": {
                                                                        "size": 1,
                                                                        "offset": 1
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "Borrowing",
                                                                "type": {
                                                                    "dataType": "bool",
                                                                    "dataMeta": {
                                                                        "size": 1,
                                                                        "offset": 0
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 53,
                    "offset": 0
                }
            },
            "_reservesList": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 32
                        }
                    },
                    "value": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        },
                        "read": true
                    }
                },
                "storageInfo": {
                    "slot": 54,
                    "offset": 0
                }
            },
            "_eModeCategories": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "uint8",
                        "dataMeta": {
                            "size": 1
                        }
                    },
                    "value": {
                        "dataType": "struct",
                        "dataMeta": {
                            "name": "EModeCategory",
                            "fields": [
                                {
                                    "name": "ltv",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationThreshold",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "liquidationBonus",
                                    "type": {
                                        "dataType": "uint16",
                                        "dataMeta": {
                                            "size": 2
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "collateralBitmap",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "label",
                                    "type": {
                                        "dataType": "string",
                                        "dataMeta": {
                                            "size": 32
                                        },
                                        "read": true
                                    }
                                },
                                {
                                    "name": "borrowableBitmap",
                                    "type": {
                                        "dataType": "uint128",
                                        "dataMeta": {
                                            "size": 16
                                        },
                                        "read": true
                                    }
                                }
                            ]
                        }
                    }
                },
                "storageInfo": {
                    "slot": 55,
                    "offset": 0
                }
            },
            "_usersEModeCategory": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "uint8",
                        "dataMeta": {
                            "size": 1
                        },
                        "read": true
                    }
                },
                "storageInfo": {
                    "slot": 56,
                    "offset": 0
                }
            },
            "__DEPRECATED_bridgeProtocolFee": {
                "dataType": "uint256",
                "dataMeta": {
                    "size": 32
                },
                "storageInfo": {
                    "slot": 57,
                    "offset": 0
                }
            },
            "_flashLoanPremium": {
                "dataType": "uint128",
                "dataMeta": {
                    "size": 16
                },
                "storageInfo": {
                    "slot": 58,
                    "offset": 0
                },
                "read": true
            },
            "__DEPRECATED_flashLoanPremiumToProtocol": {
                "dataType": "uint128",
                "dataMeta": {
                    "size": 16
                },
                "storageInfo": {
                    "slot": 58,
                    "offset": 16
                }
            },
            "__DEPRECATED_maxStableRateBorrowSizePercent": {
                "dataType": "uint64",
                "dataMeta": {
                    "size": 8
                },
                "storageInfo": {
                    "slot": 59,
                    "offset": 0
                }
            },
            "_reservesCount": {
                "dataType": "uint16",
                "dataMeta": {
                    "size": 2
                },
                "storageInfo": {
                    "slot": 59,
                    "offset": 8
                },
                "read": true
            },
            "_positionManager": {
                "dataType": "mapping",
                "dataMeta": {
                    "key": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 20
                        }
                    },
                    "value": {
                        "dataType": "mapping",
                        "dataMeta": {
                            "key": {
                                "dataType": "address",
                                "dataMeta": {
                                    "size": 20
                                }
                            },
                            "value": {
                                "dataType": "bool",
                                "dataMeta": {
                                    "size": 1
                                },
                                "read": true
                            }
                        }
                    }
                },
                "storageInfo": {
                    "slot": 60,
                    "offset": 0
                }
            }
        },
        "address": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "constants": {
            "Pool": [
                {
                    "name": "RESERVE_INTEREST_RATE_STRATEGY",
                    "value": null,
                    "type": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 160,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "ADDRESSES_PROVIDER",
                    "value": null,
                    "type": {
                        "dataType": "address",
                        "dataMeta": {
                            "size": 160,
                            "interface": "IPoolAddressesProvider"
                        }
                    }
                }
            ],
            "WadRayMath": [
                {
                    "name": "RAY",
                    "value": 1000000000000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "HALF_RAY",
                    "value": 500000000000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "WAD",
                    "value": 1000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "MathUtils": [
                {
                    "name": "SECONDS_PER_YEAR",
                    "value": 31536000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "PercentageMath": [
                {
                    "name": "HALF_PERCENTAGE_FACTOR",
                    "value": 5000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "PERCENTAGE_FACTOR",
                    "value": 10000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "ValidationLogic": [
                {
                    "name": "HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
                    "value": 1000000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "MINIMUM_HEALTH_FACTOR_LIQUIDATION_THRESHOLD",
                    "value": 950000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "LiquidationLogic": [
                {
                    "name": "MIN_BASE_MAX_CLOSE_FACTOR_THRESHOLD",
                    "value": 200000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "CLOSE_FACTOR_HF_THRESHOLD",
                    "value": 950000000000000000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "DEFAULT_LIQUIDATION_CLOSE_FACTOR",
                    "value": 5000,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                },
                {
                    "name": "MIN_LEFTOVER_BASE",
                    "value": null,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ],
            "PoolInstance": [
                {
                    "name": "POOL_REVISION",
                    "value": 9,
                    "type": {
                        "dataType": "uint256",
                        "dataMeta": {
                            "size": 256,
                            "interface": null
                        }
                    }
                }
            ]
        },
        "utilities": [
            {
                "function": "getReserveData",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].lastUpdateTimestamp",
                        "type": "uint40"
                    },
                    {
                        "value": "_reserves[asset].liquidityIndex",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].accruedToTreasury",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].aTokenAddress",
                        "type": "address"
                    },
                    {
                        "value": "_reserves[asset].variableBorrowIndex",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].isolationModeTotalDebt",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].id",
                        "type": "uint16"
                    },
                    {
                        "value": "_reserves[asset].variableDebtTokenAddress",
                        "type": "address"
                    },
                    {
                        "value": "_reserves[asset].currentLiquidityRate",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].currentVariableBorrowRate",
                        "type": "uint128"
                    },
                    {
                        "value": "_reserves[asset].configuration",
                        "type": "struct"
                    }
                ]
            },
            {
                "function": "getVirtualUnderlyingBalance",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].virtualUnderlyingBalance",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getUserAccountData",
                "parameters": {
                    "user": "address"
                },
                "returns": []
            },
            {
                "function": "getConfiguration",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].configuration",
                        "type": "struct"
                    }
                ]
            },
            {
                "function": "getUserConfiguration",
                "parameters": {
                    "user": "address"
                },
                "returns": [
                    {
                        "value": "_usersConfig[user]",
                        "type": "struct"
                    }
                ]
            },
            {
                "function": "getReserveNormalizedIncome",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].liquidityIndex",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReserveNormalizedVariableDebt",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].variableBorrowIndex",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReservesList",
                "parameters": {},
                "returns": [
                    {
                        "value": "_reservesList[0]",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getReservesCount",
                "parameters": {},
                "returns": [
                    {
                        "value": "_reservesCount",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getReserveAddressById",
                "parameters": {
                    "id": "uint16"
                },
                "returns": [
                    {
                        "value": "_reservesList[id]",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "FLASHLOAN_PREMIUM_TOTAL",
                "parameters": {},
                "returns": [
                    {
                        "value": "_flashLoanPremium",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
                "parameters": {},
                "returns": []
            },
            {
                "function": "MAX_NUMBER_RESERVES",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getEModeCategoryData",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].ltv",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationThreshold",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].label",
                        "type": "string"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationBonus",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getEModeCategoryCollateralConfig",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].ltv",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationThreshold",
                        "type": "uint16"
                    },
                    {
                        "value": "_eModeCategories[id].liquidationBonus",
                        "type": "uint16"
                    }
                ]
            },
            {
                "function": "getEModeCategoryLabel",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].label",
                        "type": "string"
                    }
                ]
            },
            {
                "function": "getEModeCategoryCollateralBitmap",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].collateralBitmap",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getEModeCategoryBorrowableBitmap",
                "parameters": {
                    "id": "uint8"
                },
                "returns": [
                    {
                        "value": "_eModeCategories[id].borrowableBitmap",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getUserEMode",
                "parameters": {
                    "user": "address"
                },
                "returns": [
                    {
                        "value": "_usersEModeCategory[user]",
                        "type": "uint8"
                    }
                ]
            },
            {
                "function": "getLiquidationGracePeriod",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].liquidationGracePeriodUntil",
                        "type": "uint40"
                    }
                ]
            },
            {
                "function": "isApprovedPositionManager",
                "parameters": {
                    "user": "address",
                    "positionManager": "address"
                },
                "returns": [
                    {
                        "value": "_positionManager[user][positionManager]",
                        "type": "bool"
                    }
                ]
            },
            {
                "function": "getReserveDeficit",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].deficit",
                        "type": "uint128"
                    }
                ]
            },
            {
                "function": "getReserveAToken",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].aTokenAddress",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getReserveVariableDebtToken",
                "parameters": {
                    "asset": "address"
                },
                "returns": [
                    {
                        "value": "_reserves[asset].variableDebtTokenAddress",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getFlashLoanLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getBorrowLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getEModeLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getLiquidationLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getPoolLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "getSupplyLogic",
                "parameters": {},
                "returns": []
            },
            {
                "function": "ADDRESSES_PROVIDER",
                "parameters": {},
                "returns": [
                    {
                        "value": "ADDRESSES_PROVIDER",
                        "type": "IPoolAddressesProvider"
                    }
                ]
            },
            {
                "function": "RESERVE_INTEREST_RATE_STRATEGY",
                "parameters": {},
                "returns": [
                    {
                        "value": "RESERVE_INTEREST_RATE_STRATEGY",
                        "type": "address"
                    }
                ]
            },
            {
                "function": "getRevision",
                "parameters": {},
                "returns": [
                    {
                        "value": 9,
                        "type": "uint256"
                    },
                    {
                        "value": "getRevision",
                        "type": "uint256"
                    }
                ]
            }
        ],
        "function_write_storage": {
            "supply(address,uint256,address,uint16) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "withdraw(address,uint256,address) returns(uint256)": [
                "_reserves[asset].lastUpdateTimestamp",
                "_usersConfig[msg.sender].data",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].virtualUnderlyingBalance",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "borrow(address,uint256,uint256,uint16,address) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[_reservesList[$all$]].isolationModeTotalDebt",
                "_reserves[$all$].isolationModeTotalDebt",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[_reservesList[$all$]].isolationModeTotalDebt",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "repay(address,uint256,uint256,address) returns(uint256)": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                "_reserves[0].isolationModeTotalDebt",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[_reservesList[0]].isolationModeTotalDebt",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32) returns(uint256)": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                "_reserves[0].isolationModeTotalDebt",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[_reservesList[0]].isolationModeTotalDebt",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "repayWithATokens(address,uint256,uint256) returns(uint256)": [
                "_reserves[asset].lastUpdateTimestamp",
                "_usersConfig[msg.sender].data",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].virtualUnderlyingBalance",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                "_reserves[0].isolationModeTotalDebt",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[_reservesList[0]].isolationModeTotalDebt",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "setUserUseReserveAsCollateral(address,bool) returns()": [
                "_usersConfig[msg.sender].data"
            ],
            "liquidationCall(address,address,address,uint256,bool) returns()": [
                "_reserves[collateralAsset].lastUpdateTimestamp",
                "_reserves[_reservesList[0]].variableBorrowIndex",
                "_reserves[collateralAsset].variableDebtTokenAddress",
                "_reserves[collateralAsset].currentVariableBorrowRate",
                "_reserves[_reservesList[0]].currentVariableBorrowRate",
                "_reserves[debtAsset].virtualUnderlyingBalance",
                "_reserves[debtAsset].liquidityIndex",
                "_reserves[collateralAsset].deficit",
                "_reserves[collateralAsset].currentLiquidityRate",
                "_usersConfig[borrower].data",
                "_reserves[_reservesList[0]].accruedToTreasury",
                "_reserves[_reservesList[0]].lastUpdateTimestamp",
                "_reserves[collateralAsset].aTokenAddress",
                "_reserves[collateralAsset].isolationModeTotalDebt",
                "_reserves[debtAsset].aTokenAddress",
                "_reserves[collateralAsset].virtualUnderlyingBalance",
                "_reserves[debtAsset].lastUpdateTimestamp",
                "_reserves[collateralAsset].configuration",
                "_reserves[_reservesList[0]].deficit",
                "_reserves[debtAsset].deficit",
                "_usersConfig[msg.sender].data",
                "_reserves[debtAsset].variableBorrowIndex",
                "_reserves[collateralAsset].variableBorrowIndex",
                "_reserves[debtAsset].variableDebtTokenAddress",
                "_reserves[debtAsset].configuration",
                "_reserves[_reservesList[0]].virtualUnderlyingBalance",
                "_reserves[debtAsset].currentLiquidityRate",
                "_reserves[_reservesList[0]].liquidityIndex",
                "_reserves[debtAsset].currentVariableBorrowRate",
                "_reserves[debtAsset].id",
                "_reserves[_reservesList[0]].currentLiquidityRate",
                "_reserves[collateralAsset].liquidityIndex"
            ],
            "flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16) returns()": [
                "_reserves[assets[0]].currentLiquidityRate",
                "_usersConfig[onBehalfOf].data",
                "_reserves[assets[0]].liquidityIndex",
                "_reserves[_reservesList[(0)+(1)]].isolationModeTotalDebt",
                "_reserves[0].isolationModeTotalDebt",
                "_reserves[assets[0]].currentVariableBorrowRate",
                "_reserves[assets[0]].accruedToTreasury",
                "_reserves[assets[0]].variableBorrowIndex",
                "_reserves[_reservesList[((0)+(1))+(1)]].isolationModeTotalDebt",
                "_reserves[assets[0]].lastUpdateTimestamp",
                "_reserves[assets[0]].virtualUnderlyingBalance"
            ],
            "flashLoanSimple(address,address,uint256,bytes,uint16) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].virtualUnderlyingBalance",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "mintToTreasury(address[]) returns()": [
                "_reserves[assets[0]].accruedToTreasury"
            ],
            "getReserveData(address) returns(DataTypes.ReserveDataLegacy)": [],
            "getVirtualUnderlyingBalance(address) returns(uint128)": [],
            "getUserAccountData(address) returns(uint256,uint256,uint256,uint256,uint256,uint256)": [],
            "getConfiguration(address) returns(DataTypes.ReserveConfigurationMap)": [],
            "getUserConfiguration(address) returns(DataTypes.UserConfigurationMap)": [],
            "getReserveNormalizedIncome(address) returns(uint256)": [],
            "getReserveNormalizedVariableDebt(address) returns(uint256)": [],
            "getReservesList() returns(address[])": [],
            "getReservesCount() returns(uint256)": [],
            "getReserveAddressById(uint16) returns(address)": [],
            "FLASHLOAN_PREMIUM_TOTAL() returns(uint128)": [],
            "FLASHLOAN_PREMIUM_TO_PROTOCOL() returns(uint128)": [],
            "MAX_NUMBER_RESERVES() returns(uint16)": [],
            "finalizeTransfer(address,address,address,uint256,uint256,uint256) returns()": [],
            "initReserve(address,address,address) returns()": [
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].aTokenAddress",
                "_reservesList[_reservesCount]",
                "_reservesCount",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].id",
                "_reservesList[0]",
                "_reserves[asset].variableDebtTokenAddress"
            ],
            "dropReserve(address) returns()": [
                "_reservesList[_reserves[asset].id]",
                "_reserves"
            ],
            "syncIndexesState(address) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].accruedToTreasury"
            ],
            "syncRatesState(address) returns()": [
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate",
                "_reserves[asset].virtualUnderlyingBalance"
            ],
            "setConfiguration(address,DataTypes.ReserveConfigurationMap) returns()": [
                "_reserves[asset].configuration"
            ],
            "updateFlashloanPremium(uint128) returns()": [
                "_flashLoanPremium"
            ],
            "configureEModeCategory(uint8,DataTypes.EModeCategoryBaseConfiguration) returns()": [],
            "configureEModeCategoryCollateralBitmap(uint8,uint128) returns()": [],
            "configureEModeCategoryBorrowableBitmap(uint8,uint128) returns()": [],
            "getEModeCategoryData(uint8) returns(DataTypes.EModeCategoryLegacy)": [],
            "getEModeCategoryCollateralConfig(uint8) returns(DataTypes.CollateralConfig)": [],
            "getEModeCategoryLabel(uint8) returns(string)": [],
            "getEModeCategoryCollateralBitmap(uint8) returns(uint128)": [],
            "getEModeCategoryBorrowableBitmap(uint8) returns(uint128)": [],
            "setUserEMode(uint8) returns()": [
                "_usersEModeCategory[msg.sender]"
            ],
            "getUserEMode(address) returns(uint256)": [],
            "resetIsolationModeTotalDebt(address) returns()": [
                "_reserves[asset].isolationModeTotalDebt"
            ],
            "getLiquidationGracePeriod(address) returns(uint40)": [],
            "setLiquidationGracePeriod(address,uint40) returns()": [],
            "rescueTokens(address,address,uint256) returns()": [],
            "deposit(address,uint256,address,uint16) returns()": [
                "_reserves[asset].lastUpdateTimestamp",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].virtualUnderlyingBalance",
                "_usersConfig[onBehalfOf].data",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate"
            ],
            "eliminateReserveDeficit(address,uint256) returns(uint256)": [
                "_reserves[asset].lastUpdateTimestamp",
                "_usersConfig[msg.sender].data",
                "_reserves[asset].accruedToTreasury",
                "_reserves[asset].liquidityIndex",
                "_reserves[asset].virtualUnderlyingBalance",
                "_reserves[asset].variableBorrowIndex",
                "_reserves[asset].currentLiquidityRate",
                "_reserves[asset].currentVariableBorrowRate",
                "_reserves[asset].deficit"
            ],
            "approvePositionManager(address,bool) returns()": [
                "_positionManager[msg.sender][positionManager]"
            ],
            "renouncePositionManagerRole(address) returns()": [
                "_positionManager[user][msg.sender]"
            ],
            "setUserUseReserveAsCollateralOnBehalfOf(address,bool,address) returns()": [
                "_usersConfig[onBehalfOf].data"
            ],
            "setUserEModeOnBehalfOf(uint8,address) returns()": [
                "_usersEModeCategory[onBehalfOf]"
            ],
            "isApprovedPositionManager(address,address) returns(bool)": [],
            "getReserveDeficit(address) returns(uint256)": [],
            "getReserveAToken(address) returns(address)": [],
            "getReserveVariableDebtToken(address) returns(address)": [],
            "getFlashLoanLogic() returns(address)": [],
            "getBorrowLogic() returns(address)": [],
            "getEModeLogic() returns(address)": [],
            "getLiquidationLogic() returns(address)": [],
            "getPoolLogic() returns(address)": [],
            "getSupplyLogic() returns(address)": [],
            "multicall(bytes[]) returns(bytes[])": [],
            "ADDRESSES_PROVIDER() returns(IPoolAddressesProvider)": [],
            "RESERVE_INTEREST_RATE_STRATEGY() returns(address)": [],
            "getRevision() returns(uint256)": [],
            "constructor(IPoolAddressesProvider,IReserveInterestRateStrategy) returns()": [],
            "initialize(IPoolAddressesProvider) returns()": [
                "initializing",
                "lastInitializedRevision"
            ]
        }
    }
}